@model UAndes.ICC5103._202301.Models.Escritura

@{
    ViewBag.Title = "Create";
}

<link href="https://unpkg.com/tabulator-tables@5.4.4/dist/css/tabulator.min.css" rel="stylesheet">
<h2>CREACIÓN NUEVA ESCRITURA</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" id="FormCreateEscritura">
    <h4 style="background: #2a2a2b; color: white; padding: 10px 20px;">ENAJENACIÓN</h4>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Código Naturaleza de la Escritura ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CNE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CNE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Comuna", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comuna, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comuna, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Manzana", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Manzana, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Manzana, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Predio", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Predio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Predio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Fojas", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fojas, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fojas, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Fecha Inscripción", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaInscripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaInscripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Número Inscripción", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumeroInscripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumeroInscripcion, "", new { @class = "text-danger" })
        </div>
    </div>



    <h4 style="background: #2a2a2b; color: white; padding: 10px 20px;">ENAJENANTES</h4>

    <div id="enajenantes-table"></div>

    <button type="button" id="reactivity-add" onclick="addTableRowEnajenantes()">Add New Row</button>

    <h4 style="background: #2a2a2b; color: white; padding: 10px 20px;">ADQUIRIENTES</h4>

    <div id="adquirientes-table"></div>

    <button type="button" id="reactivity-add" onclick="addTableRowAdquirientes()">Add New Row</button>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="hidden" id="emajenantesTableJson" name="emajenantesTableJson">
            <input type="hidden" id="adquirientesTableJson" name="adquirientesTableJson">
            <button type="submit" value="Crear" class="btn btn-default" onclick="submitForm()">Submit</button>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Regresar a la lista", "Index")
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript" src="https://unpkg.com/tabulator-tables@5.4.4/dist/js/tabulator.min.js"></script>
<script>
    let enajenantesJson;

    function submitForm() {
        var tableEnajenantes = Tabulator.findTable("#enajenantes-table")[0]
        var array = tableEnajenantes.getData();
        enajenantesJson = JSON.stringify(array);

    }

    function addTableRowEnajenantes() {
        var table = Tabulator.findTable("#enajenantes-table")[0]
        var rows = table.getRows();
        table.addRow({ item: rows.length + 1 });
    }

    function addTableRowAdquirientes() {
        var table = Tabulator.findTable("#adquirientes-table")[0]
        var rows = table.getRows();
        table.addRow({ item: rows.length + 1 });
    }
    
    $(document).ready(function () {



        // Submit form function
        $('#form-group').on('submit', function (e) {
            e.preventDefault();
            var form_data = $(this).serializeArray();
            var json_data = JSON.stringify(form_data);
            console.log(json_data); // Output JSON data to console
        });
        var tabledata = [
            { item: 1, rut: "", porcentajeDerecho: 0, porcentajeDerechoNoAcreditado: false},

        ];
        var tableEnajenantes = new Tabulator("#enajenantes-table", {
            height: "311px",
            layout: "fitColumns",
            resizableColumnFit: true,
            responsiveLayout: "hide",
            reactiveData: true, //turn on data reactivity
            data: tabledata, //load data into table
            columns: [
                { title: "RUT", field: "rut", editor: true, },
                { title: "% de derecho", field: "porcentajeDerecho", sorter: "number", editor: true, width: 150 },
                { title: "% de derecho no acreditado", field: "porcentajeDerechoNoAcreditado", hozAlign: "center", editor: true, formatter: "tickCross", width: 230 },

            ],
        });
        tableEnajenantes.on("dataChanged", function (row) {
            //row - row component
            console.log("xd")
            var tableEnajenantes = Tabulator.findTable("#enajenantes-table")[0]
            var array = tableEnajenantes.getData();
            enajenantesJson = JSON.stringify(array);
            console.log(enajenantesJson);
            var enajenanteJsonHiddenInput = document.querySelector("#emajenantesTableJson");
            enajenanteJsonHiddenInput.value = enajenantesJson;
            console.log(enajenanteJsonHiddenInput.value)
        });
        var tableAdquirientes = new Tabulator("#adquirientes-table", {
            height: "311px",
            layout: "fitColumns",
            resizableColumnFit: true,
            responsiveLayout: "hide",
            reactiveData: true, //turn on data reactivity
            data: tabledata, //load data into table
            columns: [
                { title: "RUT", field: "rut", editor: true, },
                { title: "% de derecho", field: "porcentajeDerecho", sorter: "number", editor: true, width: 150 },
                { title: "% de derecho no acreditado", field: "porcentajeDerechoNoAcreditado", hozAlign: "center", editor: true, formatter: "tickCross", width: 230 },

            ],
        });
        tableAdquirientes.on("dataChanged", function (row) {
            //row - row component
            console.log("xd")
            var tableAdquirientes = Tabulator.findTable("#adquirientes-table")[0]
            var array = tableAdquirientes.getData();
            adquirientesJson = JSON.stringify(array);
            console.log(adquirientesJson);
            var adquirientesJsonHiddenInput = document.querySelector("#adquirientesTableJson");
            adquirientesJsonHiddenInput.value = adquirientesJson;
            console.log(adquirientesJsonHiddenInput.value)
        });
        
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
